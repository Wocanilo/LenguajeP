Tipos de datos:
    Básicos:
        NUM: tipo entero (ej: -1, 0, 1...)
            Operaciones:
                - Multiplicacion (*) (Más prioritario)
                - Suma (+) (Misma prioridad que -)
                - Resta (-) (Misma prioridad que +)
        LOG: tipo boleano (T y F)
            Operaciones:
                - Ninguna
            Observaciones:
                - Consideramos que las condiciones tan solo pueden usarse en las instrucciones de control

    Compuestos:
        SEQ(NUM): secuencia de enteros )[3, 4, 2] // Admite secuencias vacias
        SEQ(LOG): secuencia de boleanos [T] // Admite secuencias vacias

        Predicados (Cuidado al implementar...):
            - vacia: comprueba si una secuencia es vacía
            - ultima_posicion: devuelve  la ultima posición de una secuencia no vacía
        Observaciones:
            - El acceso a un elemento de la secuencia se realiza mediante corchetes. Ej: s[2]. Cualquier expresión numérica es válida como índice
            - El acceso a una posición inexistente provoca un error
            - El primer elemento de una secuencia se encuetnra en la posición 0

Observaciones:
    - El tipo de una variable es invariable una vez declarada
    - La declaración de una variable no asigna valor a esta
    - Las expresiones de distintos tipos no se pueden combinar. Ej: 1+F, []+[1, 2]
    - Se admiten los comentarios en línea y en bloque

Seccion instrucciones:
    - Asignacion:
        -Puede ser tanto simple o múltiple
            x = 1;
            x,y = 2,5;
        - La asignaciones multiples se realizan de forma paralela
    - Condicional
        Bloque de instrucciones cuya ejecucion depende del valor de verdad de una condición
            - si-fsi
            - si-sino-fsi
        Las condiciones tan solo se pueden realizar entre expresiones del mismo tipo.
    - Iteración
        - mientras-hacer-fmientras
        Se le puede asociar una funcion de avance, esta funcion comprueba que la iteracion avanza hasta su terminacion
    - Ruptura de control
        La instruccion ruptura permite llevar al programa fuera del bloque en el que se encuentra la insturccion
    - Llamada a procedimiento
    - Devolución de resultados
    - Mostrar valores en consola
        El procedimiento mostrar permite mostrar por consola los valores de una lista de variables
    - Aserto

Semántica del lenguaje P:
- Cada variable declarada tiene un tipo invariable -> Hecho
- Una vez declarada una funcion o procedimiento es inmutable -> Hecho
- Dado que el lenguaje predefine dos funciones para las secuencias, vacia y ultima_posicion, debemos comprobar que no se trata de sobreescribir dichas funciones -> Hecho

- Es un lenguaje fuertemente tipado, las expresiones de distintos tipos no pueden mezclarse.
    - (Está implícito pero cualquier asignación que resuelva a un tipo indefinido es incorrecta)
    - Aplica también a las condiciones, dado que están formadas por expresiones
    - Es necesario resolver el tipo de las funciones para poder resolver correctamente el tipo de las expresiones (Hay que tener en cuenta que los procedimientos devuelven indefinido siempre)
    - En las listas tan solo puede haber un tipo

- En las llamadas a los proc/func debe respetarse el tipo de los argumentos
- Las funciones y procedimientos deben respetar el tipo devuelto
- Las variables de entrada de una función son de solo lectura
- En una asignación multiple debe existir el mismo número de elementos en cada lado de la asignación
    - Caso límite: llamada a una función que devuelve múltiples valores
- No es posible llamar a una función o procredimiento que no existe

